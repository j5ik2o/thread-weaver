akka {
  cluster.downing-provider-class = "tanukki.akka.cluster.autodown.OldestAutoDowning"

  custom-downing {
    stable-after = 20s

    oldest-auto-downing {
      oldest-member-role = ""
      down-if-alone = true
    }
  }

  cluster {
    seed-nodes = []
    seed-nodes = ${?THREAD_WEAVER_SEED_NODES}
  }

  remote {
    log-remote-lifecycle-events = on
    netty.tcp {
      hostname = "127.0.0.1"
      hostname = ${?HOSTNAME}
      port = 2551
      port = ${?THREAD_WEAVER_REMOTE_PORT}
      bind-hostname = "0.0.0.0"
    }
  }

  discovery {
    method = kubernetes-api
    method = ${?THREAD_WEAVER_DISCOVERY_METHOD}
    kubernetes-api {
      pod-namespace = "thread-weaver"
      pod-namespace = ${?THREAD_WEAVER_K8S_NAMESPACE}
      pod-label-selector = "app=thread-weaver-api-server"
      pod-label-selector = ${?THREAD_WEAVER_K8S_SELECTOR}
      pod-port-name = "management"
      pod-port-name = ${?THREAD_WEAVER_K8S_MANAGEMENT_PORT}
    }
  }

  management {
    http {
      hostname = "127.0.0.1"
      hostname = ${?HOSTNAME}
      port = 8558
      port = ${?THREAD_WEAVER_MANAGEMENT_PORT}
      bind-hostname = "0.0.0.0"
      bind-port = 8558
    }
    cluster.bootstrap {
      contact-point-discovery {
        discovery-method = kubernetes-api
        required-contact-point-nr = 2
        required-contact-point-nr = ${?REQUIRED_CONTACT_POINTS}
      }
    }
  }
}

akka {
  persistence {
    journal {
      plugin = dynamo-db-journal
    }
    snapshot-store {
      plugin = dynamo-db-snapshot
    }
  }
}

dynamo-db-journal {
  dynamodb-client {
    access-key-id = "x"
    secret-access-key = "x"
    endpoint = "http://dynamodb:8000/"
  }
}

dynamo-db-snapshot {
  dynamodb-client {
    access-key-id = "x"
    secret-access-key = "x"
    endpoint = "http://dynamodb:8000/"
  }
}

dynamo-db-read-journal {
  dynamodb-client {
    access-key-id = "x"
    secret-access-key = "x"
    endpoint = "http://dynamodb:8000/"
  }
}