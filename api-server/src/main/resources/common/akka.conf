akka {
  loglevel = DEBUG
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"

  log-dead-letters = 0
  log-dead-letters-during-shutdown = off

  coordinated-shutdown.exit-jvm = on
  coordinated-shutdown.run-by-jvm-shutdown-hook = on //this is the default value

  actor {
    provider = cluster
    default-dispatcher {
      # This will be used if you have set "executor = "fork-join-executor""
      # Underlying thread pool implementation is akka.dispatch.forkjoin.ForkJoinPool
      fork-join-executor {
        # Min number of threads to cap factor-based parallelism number to
        parallelism-min = 8
        parallelism-min = ${?THREAD_WEAVER_DEFAULT_DISPATCHER_FORK_JOIN_PARALLELISM_MIN}

        # The parallelism factor is used to determine thread pool size using the
        # following formula: ceil(available processors * factor). Resulting size
        # is then bounded by the parallelism-min and parallelism-max values.
        parallelism-factor = 3.0
        parallelism-factor = ${?TREAD_WEAVER_DEFAULT_DISPATCHER_FORK_JOIN_PARALLELISM_FACTOR}

        # Max number of threads to cap factor-based parallelism number to
        parallelism-max = 64
        parallelism-max = ${?THREAD_WEAVER_DEFAULT_DISPATCHER_FORK_JOIN_PARALLELISM_MAX}

        # Setting to "FIFO" to use queue like peeking mode which "poll" or "LIFO" to use stack
        # like peeking mode which "pop".
        task-peeking-mode = "FIFO"
      }
    }
  }

  http {
    server {
      idle-timeout = 60 s
      idle-timeout = ${?THREAD_WEAVER_HTTP_IDLE_TIMEOUT}
      request-timeout = 20 s
      request-timeout = ${?THREAD_WEAVER_HTTP_REQUEST_TIMEOUT}
      max-connections = 2048
      max-connections = ${?THREAD_WEAVER_HTTP_MAX_CONNECTIONS}
      preview.enable-http2 = on
    }
  }
}
